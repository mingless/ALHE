% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/des.R
\name{des}
\alias{des}
\title{Main des function.}
\usage{
des(fitnessFcn, nvars, initFcn = desUniformInit, outputFcn = NULL,
  control = list())
}
\arguments{
\item{fitnessFcn}{Optimized function. Should be defined to take
an nvars-sized vector as it's argument.}

\item{nvars}{Amount of variables in the optimized function.}

\item{initFcn}{Function used to initialize the population. It is called with
parameters (fitnessFcn,nvars,control)}

\item{outputFcn}{function that takes the current population and it's score
as parameters. Can be used to plot the progress. Default = NULL}

\item{control}{List containing the algorithm settings. Check details for more information.}
}
\value{
A list containing the best individual, his score, number of
iterations passed and an exit flag (currently not used)
}
\description{
Minimizes the given function.
}
\details{
The function is not safe against using wrong parameters. Make sure
to use reasonable values, or the results might unpredictable.

Most of the algorithm parameters is defined in the control list:
\itemize{
\item scalingCoeff - scaling coefficient. Default = 1/sqrt(2)
\item popSize - population size. Default = 4*nvars
\item eliteSize - the number of individuals that take part in defining the
reference point for the next population. Default = popSize/2
\item migrationCoeff - coefficient in range <0.,1.> determining how fast
the center of population changes. default = 0.5
\item horizonSize - amount of the past populations that take part in creating
the offspring. default = 10
\item noiseCoeff - coefficient specifying the amount of noise added to each new individual
default = 1e-4
\item lowerBounds - lower bounds of the initial population if using the default initFcn.
default = rep(-100,nvars)
\item upperBounds - upper bounds --||--. Default = rep(100,nvars)
\item maxIterations - number of iterations after which optimizations stops. Currently
the only stop condition. default = 1000*nvars
\item stopScore - if not NULL, stops further evaluations at given score.
Useful for benchmark problems, where the global minimum is already known.
Default - NULL
}
}
\examples{
#rosenbrock function with global minimum f(1,1)=0
rosen <- function(x) (1-x[1])^2+100*(x[2]-x[1]^2)^2
con <- list(upperBounds=c(10,10),lowerBounds=c(-10,-10),maxIterations=4000)
des(rosen,2,control=con)
}
